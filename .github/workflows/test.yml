name: Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  backend:
    name: Backend Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('packages/api/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        working-directory: ./packages/api
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run linting
        working-directory: ./packages/api
        run: |
          flake8 app
          black --check app

      - name: Run type checking
        working-directory: ./packages/api
        run: |
          mypy app --ignore-missing-imports

      - name: Run tests with coverage
        working-directory: ./packages/api
        run: |
          pytest --cov=app --cov-report=xml --cov-report=term

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./packages/api/coverage.xml
          flags: backend
          name: backend-coverage

  frontend:
    name: Frontend Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache Node dependencies
        uses: actions/cache@v4
        with:
          path: packages/web/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('packages/web/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        working-directory: ./packages/web
        run: npm ci

      - name: Run linting
        working-directory: ./packages/web
        run: npm run lint

      - name: Run type checking
        working-directory: ./packages/web
        run: npm run type-check

      - name: Run tests with coverage
        working-directory: ./packages/web
        run: npm run test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./packages/web/coverage/coverage-final.json
          flags: frontend
          name: frontend-coverage

  build:
    name: Build Check
    runs-on: ubuntu-latest
    needs: [backend, frontend]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install frontend dependencies
        working-directory: ./packages/web
        run: npm ci

      - name: Build frontend
        working-directory: ./packages/web
        run: npm run build

      - name: Check build output
        run: |
          if [ ! -d "packages/web/dist" ]; then
            echo "Build failed - dist directory not created"
            exit 1
          fi
          echo "Build successful"